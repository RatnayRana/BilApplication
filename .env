# ERPAPIURL = 'http://172.16.40.23:3000/api/v1/erp'

# AUTHAPIURL='http://172.16.40.23:3000/api/v1'

ERPAPIURL = 'http://192.168.137.28:3000/api/v1/erp'

# AUTHAPIURL='http://192.168.137.28:3000/api/v1'








#   const tokenData = GlobalUseEffect();
#   const [openStart, setOpenStart] = useState(true);
#   const [resultMessage, setResultMessage] = useState<string | null>(null);
#   const [errorMessage, seterrorMessage] = useState<string | null>(null);
#   const [isAuthenticated, setIsAuthenticated] = useState(false);
#   const [showDialog, setShowDialog] = useState(false); // New state to control dialog visibility


#   function handleClose() {
#     setOpenStart(!openStart);
#     setShowDialog(false); // Reset dialog visibility

#   }

#   function handleSuccess() {
#     handleClose();
#     navigation.navigate('Main');
#   }
#   const navigation =
#     useNavigation<NavigationProp<RootStackNavigatorParamsList>>();

#   const handleChange = async (
#     item: {item_name: string; item_id: number},
#     username: string | undefined,
#   ) => {
#     try {
#       let result
#       result = await RoleAndPermission({
#         itemName: item.item_name,
#         username,
#       });
#       setShowDialog(true);

#       if ('permission' in result) {
#         const Authenticated = requiredPermissions.some(permission =>
#           result.permission.includes(permission),
#         );
#         setIsAuthenticated(Authenticated);
#         setResultMessage(result.message)
#       } else {
#         seterrorMessage(result.errorMessage);
#       }
#       //   // setResultMessage(result.message);
#       // const isAuthenticated = requiredPermissions.some(permission =>
#       //   result.permission.includes(permission),
#       // );
#       // setIsAuthenticated(authStatus);
#       // const isAuthenticated = result.permission.includes(requiredPermissions)
#       // if (isAuthenticated) {
#       //   navigation.navigate('CardNavigation', {
#       //     itemId: item.item_id,
#       //     itemName: item.item_name,
#       //   });
#       //   console.log(result.message);
#       // } else {
#       //   Alert.alert(result.message);
#       // }
#     } catch (error) {
#       // console.log('error',error )
#     }
#   };

#  {/* Only show dialog when showDialog is true */}
#       {showDialog && (
#         isAuthenticated ? (
#           <CustomDialog
#             message={JSON.stringify(resultMessage)}
#             color="#0AA06E"
#             imageSource={require('../../assets/checked.png')}
#             onClose={handleSuccess}
#           />
#         ) : (
#           <CustomDialog
#             message={JSON.stringify(errorMessage)}
#             color="#D32F2F"
#             imageSource={require('../../assets/error.png')}
#             onClose={handleClose}
#           />
#         )
#       )}